name: Build All

on: [push, pull_request]

jobs:
  build-arm:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ros2-arm
      ANDROID_ABI: armeabi-v7a
      ANDROID_NATIVE_API_LEVEL: 23
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: |
        docker build . -t ${IMAGE_NAME} --build-arg ANDROID_ABI=${ANDROID_ABI} --build-arg ANDROID_NATIVE_API_LEVEL=${ANDROID_NATIVE_API_LEVEL}
    - name: Make artifact
      run: |
        docker run --rm -v $PWD:/ros2 ${IMAGE_NAME} bash -c "cp -r /ros2_ws/install /ros2"
        mv install ${IMAGE_NAME}
        tar -zcf ${IMAGE_NAME}.tar.gz ${IMAGE_NAME}
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.IMAGE_NAME }}
        path: ${{ env.IMAGE_NAME }}.tar.gz
    - name: Login to docker registry
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    - name: Push image
      run: |
        docker tag ${IMAGE_NAME} ${{ secrets.DOCKER_USERNAME }}/${IMAGE_NAME}:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/${IMAGE_NAME}:latest
  build-arm64:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ros2-arm64
      ANDROID_ABI: arm64-v8a
      ANDROID_NATIVE_API_LEVEL: 28
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: |
        docker build . -t ${IMAGE_NAME} --build-arg ANDROID_ABI=${ANDROID_ABI} --build-arg ANDROID_NATIVE_API_LEVEL=${ANDROID_NATIVE_API_LEVEL}
    - name: Make artifact
      run: |
        docker run --rm -v $PWD:/ros2 ${IMAGE_NAME} bash -c "cp -r /ros2_ws/install /ros2"
        mv install ${IMAGE_NAME}
        tar -zcf ${IMAGE_NAME}.tar.gz ${IMAGE_NAME}
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.IMAGE_NAME }}
        path: ${{ env.IMAGE_NAME }}.tar.gz
    - name: Login to docker registry
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    - name: Push image
      run: |
        docker tag ${IMAGE_NAME} ${{ secrets.DOCKER_USERNAME }}/${IMAGE_NAME}:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/${IMAGE_NAME}:latest